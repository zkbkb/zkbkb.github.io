# 网站内容统一配置文件
# 这个文件包含了网站的所有文本内容，方便统一管理和修改

# 基本信息
site_info:
  title: "zkb / Academic Bio"
  subtitle: "BA History, Politics and Economics student at University College London"
  description: "Academic personal website showcasing research, publications, and academic activities"
  url: "https://zkb.bio"
  baseurl: ""

# 作者信息
author:
  name: "Kaibin Zhang"
  pronouns: "He/Him"
  bio: "BA History, Politics and Economics student at UCL."
  location: "London, UK"
  employer: "University College London"
  uri: "https://zkb.bio"
  email: "kaibin.zhang.23@ucl.ac.uk"
  avatar: "profile.png"

# 导航菜单
navigation:
  main:
    - title: "Projects"
      url: "/publications/"
    - title: "Portfolio"
      url: "/portfolio/"
    - title: "Blog Posts"
      url: "/year-archive/"
    - title: "CV"
      url: "/cv/"

# 页面标题和描述
pages:
  home:
    title: "Home"
    description: "Welcome to my academic website"
  
  publications:
    title: "Publications"
    description: "Research publications and academic papers"
    
  portfolio:
    title: "Portfolio"
    description: "Academic projects and achievements"
    
  blog:
    title: "Blog Posts"
    description: "Academic blog posts and articles"
    
  cv:
    title: "CV"
    description: "Academic curriculum vitae"
    
  about:
    title: "About"
    description: "About me and my academic background"

# About页面内容
about_page:
  title: "About"
  introduction: "This is the front page of a website that is powered by the Academic Pages template and hosted on GitHub pages. GitHub pages is a free service in which websites are built and hosted from code and data stored in a GitHub repository, automatically updating when a new commit is made to the repository. This template was forked from the Minimal Mistakes Jekyll Theme created by Michael Rose, and then extended to support the kinds of content that academics have: publications, talks, teaching, a portfolio, blog posts, and a dynamically-generated CV. You can fork this template right now, modify the configuration and markdown files, add your own PDFs and other content, and have your own site for free, with no ads!"
  
  sections:
    data_driven:
      title: "A data-driven personal website"
      content: "Like many other Jekyll-based GitHub Pages templates, Academic Pages makes you separate the website's content from its form. The content & metadata of your website are in structured markdown files, while various other files constitute the theme, specifying how to transform that content & metadata into HTML pages. You keep these various markdown (.md), YAML (.yml), HTML, and CSS files in a public GitHub repository. Each time you commit and push an update to the repository, the GitHub pages service creates static HTML pages based on these files, which are hosted on GitHub's servers free of charge.\n\nMany of the features of dynamic content management systems (like Wordpress) can be achieved in this fashion, using a fraction of the computational resources and with far less vulnerability to hacking and DDoSing. You can also modify the theme to your heart's content without touching the content of your site. If you get to a point where you've broken something in Jekyll/HTML/CSS beyond repair, your markdown files describing your talks, publications, etc. are safe. You can rollback the changes or even delete the repository and start over - just be sure to save the markdown files! Finally, you can also write scripts that process the structured data on the site, such as this one that analyzes metadata in pages about talks to display a map of every location you've given a talk."
    
    getting_started:
      title: "Getting started"
      content: "1. Register a GitHub account if you don't have one and confirm your e-mail (required!)\n2. Fork this template by clicking the \"Use this template\" button in the top right.\n3. Go to the repository's settings (rightmost item in the tabs that start with \"Code\", should be below \"Unwatch\"). Rename the repository \"[your GitHub username].github.io\", which will also be your website's URL.\n4. Set site-wide configuration and create content & metadata (see below – also see this set of diffs showing what files were changed to set up an example site for a user with the username \"getorg-testacct\")\n5. Upload any files (like PDFs, .zip files, etc.) to the files/ directory. They will appear at https://[your GitHub username].github.io/files/example.pdf.\n6. Check status by going to the repository settings, in the \"GitHub pages\" section"
    
    site_configuration:
      title: "Site-wide configuration"
      content: "The main configuration file for the site is in the base directory in _config.yml, which defines the content in the sidebars and other site-wide features. You will need to replace the default variables with ones about yourself and your site's github repository. The configuration file for the top menu is in _data/navigation.yml. For example, if you don't have a portfolio or blog posts, you can remove those items from that navigation.yml file to remove them from the header."
    
    create_content:
      title: "Create content & metadata"
      content: "For site content, there is one markdown file for each type of content, which are stored in directories like _publications, _talks, _posts, _teaching, or _pages. For example, each talk is a markdown file in the _talks directory. At the top of each markdown file is structured data in YAML about the talk, which the theme will parse to do lots of cool stuff. The same structured data about a talk is used to generate the list of talks on the Talks page, each individual page for specific talks, the talks section for the CV page, and the map of places you've given a talk (if you run this python file or Jupyter notebook, which creates the HTML for the map based on the contents of the _talks directory).\n\n**Markdown generator**\n\nThe repository includes a set of Jupyter notebooks that converts a CSV containing structured data about talks or presentations into individual markdown files that will be properly formatted for the Academic Pages template. The sample CSVs in that directory are the ones I used to create my own personal website at stuartgeiger.com. My usual workflow is that I keep a spreadsheet of my publications and talks, then run the code in these notebooks to generate the markdown files, then commit and push them to the GitHub repository."
    
    edit_repository:
      title: "How to edit your site's GitHub repository"
      content: "Many people use a git client to create files on their local computer and then push them to GitHub's servers. If you are not familiar with git, you can directly edit these configuration and markdown files directly in the github.com interface. Navigate to a file (like this one and click the pencil icon in the top right of the content preview (to the right of the \"Raw | Blame | History\" buttons). You can delete a file by clicking the trashcan icon to the right of the pencil icon. You can also create new files or upload files by navigating to a directory and clicking the \"Create new file\" or \"Upload files\" buttons.\n\nExample: editing a markdown file for a talk"
    
    more_info:
      title: "For more info"
      content: "More info about configuring Academic Pages can be found in the guide, the growing wiki, and you can always ask a question on GitHub. The guides for the Minimal Mistakes theme (which this theme was forked from) might also be helpful."

# 社交媒体链接
social_links:
  github: "zkbkb"
  linkedin: "Kaibin-Zhang"
  twitter: ""
  instagram: ""
  facebook: ""
  youtube: ""

# 学术链接
academic_links:
  arxiv: ""
  googlescholar: ""
  orcid: ""
  researchgate: ""
  scopus: ""

# 界面文本
ui_text:
  # 通用文本
  common:
    page: "Page"
    home: "Home"
    about: "About"
    contact: "Contact"
    more: "Learn More"
    read_more: "Read More"
    back_to_top: "Back to Top"
    loading: "Loading..."
    
  # 导航文本
  navigation:
    previous: "Previous"
    next: "Next"
    breadcrumb_separator: "/"
    
  # 内容标签
  content:
    tags_label: "Tags:"
    categories_label: "Categories:"
    date_label: "Published:"
    author_label: "Author:"
    read_time: "minute read"
    less_than: "less than"
    
  # 评论系统
  comments:
    title: "Comments"
    leave_comment: "Leave a Comment"
    submit: "Submit Comment"
    submitted: "Submitted"
    success_msg: "Thanks for your comment! It will show on the site once it has been approved."
    error_msg: "Sorry, there was an error with your submission. Please make sure all required fields have been completed and try again."
    
  # 表单标签
  forms:
    name: "Name"
    email: "Email address"
    website: "Website (optional)"
    comment: "Comment"
    submit: "Submit"
    
  # 分享文本
  sharing:
    share_on: "Share on"
    powered_by: "Powered by"
    
  # 相关文章
  related:
    title: "You May Also Enjoy"
    more_posts: "More Posts"
    
  # 页脚文本
  footer:
    follow_label: "Follow:"
    feed_label: "Feed"
    website_label: "Website"
    email_label: "Email"
    recent_posts: "Recent Posts"

# 错误页面
error_pages:
  404:
    title: "Page Not Found"
    message: "Sorry, the page you're looking for doesn't exist."
    back_home: "Back to Home"
    
  500:
    title: "Server Error"
    message: "Sorry, something went wrong on our end."
    try_again: "Try Again"

# 搜索功能
search:
  placeholder: "Search..."
  no_results: "No results found"
  results_found: "results found"

# 分页
pagination:
  previous: "Previous"
  next: "Next"
  page: "Page"
  of: "of"

# 主题设置
theme:
  name: "default"
  dark_mode: true
  light_mode: true 